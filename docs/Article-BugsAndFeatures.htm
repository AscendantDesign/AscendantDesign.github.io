<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<!-- Font and icon -->
<link rel="icon" href="images/adticon24.png" type="image/png">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;800&display=swap" rel="stylesheet">
<!-- /Font and icon -->
<style>
body { padding: 24px; font-family: Poppins; }
a { font-family: Poppins; font-weight: bold; text-decoration: none; }
.copyright { font-size: 8pt !important; }
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Poppins;
	panose-1:0 0 5 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:107%;
	font-size:11.0pt;
	font-family:Poppins;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:107%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:Poppins;
	color:#2F5496;
	font-weight:normal;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:107%;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:Poppins;
	color:#2F5496;
	font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin:0in;
	font-size:28.0pt;
	font-family:Poppins;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Title Char";
	margin:0in;
	font-size:28.0pt;
	font-family:Poppins;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Title Char";
	margin:0in;
	font-size:28.0pt;
	font-family:Poppins;
	letter-spacing:-.5pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Title Char";
	margin:0in;
	font-size:28.0pt;
	font-family:Poppins;
	letter-spacing:-.5pt;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:Poppins;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:Poppins;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:Poppins;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	line-height:107%;
	font-size:11.0pt;
	font-family:Poppins;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:Poppins;
	letter-spacing:-.5pt;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:Poppins;
	color:#2F5496;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:Poppins;
	color:#2F5496;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 

-->
</style>

</head>

<body lang=EN-US style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoTitle>Bugs Reports and Feature Requests</p>

<p class=MsoNormal>&nbsp;</p>

<h1>Introduction</h1>

<p class=MsoNormal>During testing phases of a product, bug reports and feature
requests are two of the most commonly used forms for providing information back
to the development team.</p>

<p class=MsoNormal>&nbsp;</p>

<h1>Bug Reports</h1>

<p class=MsoNormal>Bugs are the slang term for problems in software and
electronics. These problems can exist for a number of reasons, most often one
of the following.</p>

<ul><li>The operation doesn't match the original specification. �This can
be due to the operation being present but incorrect, or the operation not being
supplied at all.</li>

<li>The operation matches the original specification, but the
specification or assumption of operation was incorrect.</li>

<li>The operation doesn't directly correspond to a formal
specification.</li></ul>

<p class=MsoNormal>In most cases, a bug can be indicated when the thing that
seems to make the most possible sense either didn't work or provided incorrect
results. Whenever you encounter a problem where a certain type of action was
supposed to occur and it didn't, or whenever a completely different action
occurred than what was normally expected, a bug report is the most appropriate call.</p>

<p class=MsoNormal>For example, if you select Print from the menu and no hint
of printing takes place, you can almost guarantee by intuition that you have
encountered a bug.</p>

<p class=MsoNormal>&nbsp;</p>

<h1>Feature Requests</h1>

<p class=MsoNormal>Contrarily to the term 'bug', which typically refers to a feature
or component that has already been implemented and is having trouble doing what
it is written to do, a feature request might be something you use as more of a
catch-all for anything that has not yet been added or for which a change could
be suggested.</p>

<p class=MsoNormal>&nbsp;</p>

<h2>Features and Product Improvement</h2>

<p class=MsoNormal>On many occasions, the exact idea of a feature request is to
express something to the overall wish list of capabilities the product should
receive as its stature improves. There is virtually no limit to improvements
that can be requested except that each of those requests be directly related to
the product being described.</p>

<p class=MsoNormal>&nbsp;</p>

<h2>Features and Incomplete Design</h2>

<p class=MsoNormal>Not every feature request is daisies and buttercups, because
sometimes, feature requests can also be used to report problems, too.</p>

<p class=MsoNormal>To determine whether your issue is a feature request, first
eliminate the possibility of it being a bug. This is not always the easiest
decision to make because a feature request might have some traits of a� bug,
especially in times that an absence of functionality keeps you from getting
your job done. The one aspect making a feature different from a bug is measured
along the development path.</p>

<p class=MsoNormal>Computer and software logic is very specific in that the
only functionality a digital system ever supports is that which has been
explicitly defined for the product. Therefore, if little or no effort has yet been
put into a desired feature, that actual feature is not expected to perform its
full work until it has been defined, tested, and released.</p>

<p class=MsoNormal>One example of this decision might be shown in a car without
breaks. As a driver, you are going to get in big trouble without them, but if
there had never been any plans to include brakes into the design and somehow
the car had reached public testing, the request for brakes would be handled as
a feature request instead of a bug report.</p>

<p class=MsoNormal>&nbsp;</p>

<h1>Why the Difference?</h1>

<p class=MsoNormal>At this stage of the game, bug reports and feature requests
are really only separated by a semantical difference. In most cases, if you
mistakenly report a bug as a feature request or visa-versa, no harm is done in
any way, and those reports can be freely moved from one category to the other by
the project manager if needed.</p>

<p class=MsoNormal>The real difference between these two types of public input
comes in how the resulting work is planned, based upon the input that has been
received. The following outline details our general planning strategy when
improving an application for testing.</p>

<p class=MsoNormal>&nbsp;</p>

<ul><li>Decrease physical danger.</li>

<li>Bugs.</li>

<li>Missing Features.</li>

<li>Increase performance.</li>

<li>Bugs.</li>

<li>Work stopped.</li>

<li>Group productivity slowed.</li>

<li>Individual productivity slowed.</li>

<li>Inconvenience.</li>

<li>Features.</li>

<li>Initiating work.</li>

<li>Increasing group productivity.</li>

<li>Increasing individual productivity.</li>

<li>Overcoming inconvenience.</li>

<li>Becoming proactive about the future.</li></ul>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
